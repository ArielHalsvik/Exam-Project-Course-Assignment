{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Exam Project API",
    "description": "Documentation for the Exam Project API"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/admin/products": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Gets products page for admin.",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "type": "string"
          },
          {
            "name": "category",
            "in": "query",
            "type": "string"
          },
          {
            "name": "brand",
            "in": "query",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/admin/brands": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Gets brands page for admin.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/admin/categories": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Gets categories page for admin.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/admin/roles": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Gets roles page for admin.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/admin/users": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Gets users page for admin.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/admin/orders": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Gets orders page for admin.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/admin/login": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Logs out a user and gets the login page for admin.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Gets all users from the database.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Login with either an email or a username, and a password. Returns a webtoken. Use this for access to other admin endpoints in this format: \"Bearer: \" + token. If the database is not filled yet, please POST \"/init\" under \"Utilities\" before proceeding.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Registers a new user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserRegister"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/{userId}": {
      "put": {
        "tags": [
          "Users"
        ],
        "description": "Updates a specific user.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserEdit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "Deletes a specific user.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "userName": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "address": {
                  "example": "any"
                },
                "telephoneNumber": {
                  "example": "any"
                },
                "roleId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/brands/": {
      "get": {
        "tags": [
          "Brands"
        ],
        "description": "Gets all brands from the database.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Brands"
        ],
        "description": "Creates a new brand.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Brand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/brands/{brandId}": {
      "put": {
        "tags": [
          "Brands"
        ],
        "description": "Updates a specific brand.",
        "parameters": [
          {
            "name": "brandId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Brand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Brands"
        ],
        "description": "Deletes a specific brand.",
        "parameters": [
          {
            "name": "brandId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "brand": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/cart/": {
      "get": {
        "tags": [
          "Carts"
        ],
        "description": "Gets all user",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Carts"
        ],
        "description": "Creates a new active cart if the user doesn",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Carts"
        ],
        "description": "Updates a specific cart item",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Carts"
        ],
        "description": "Deletes a specific item in a user",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CartDelete"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/cart/checkout/now": {
      "post": {
        "tags": [
          "Carts"
        ],
        "description": "Checks out a user",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/cart/{cartId}": {
      "delete": {
        "tags": [
          "Carts"
        ],
        "description": "Deletes a specific cart.",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "productId": {
                  "example": "any"
                },
                "quantity": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/categories/": {
      "get": {
        "tags": [
          "Categories"
        ],
        "description": "Gets all categories from the database.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Categories"
        ],
        "description": "Creates a new category.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/categories/{categoryId}": {
      "put": {
        "tags": [
          "Categories"
        ],
        "description": "Updates a specific category.",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Categories"
        ],
        "description": "Deletes a specific category.",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "category": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/init/": {
      "post": {
        "tags": [
          "Utilities"
        ],
        "description": "Populates the database.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "example": "any"
                },
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "req": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "address": {
                  "example": "any"
                },
                "telephoneNumber": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/membership/": {
      "get": {
        "tags": [
          "Memberships"
        ],
        "description": "Gets all memberships from the database.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Memberships"
        ],
        "description": "Creates a new membership.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Membership"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/membership/{membershipId}": {
      "put": {
        "tags": [
          "Memberships"
        ],
        "description": "Updates a specific membership.",
        "parameters": [
          {
            "name": "membershipId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Membership"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Memberships"
        ],
        "description": "Deletes a specific membership.",
        "parameters": [
          {
            "name": "membershipId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "membership": {
                  "example": "any"
                },
                "purchases": {
                  "example": "any"
                },
                "discount": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/orders/": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Gets all orders from the database for admins, and all orders a user has made for the user.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/orders/{orderId}": {
      "put": {
        "tags": [
          "Orders"
        ],
        "description": "Updates the status of a specific order.",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Orders"
        ],
        "description": "Deletes a specific order.",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "statusId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/products/": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Gets all products from the database.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "description": "Creates a new product.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/products/{productId}": {
      "put": {
        "tags": [
          "Products"
        ],
        "description": "Updates a specific product.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ProductEdit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "description": "Deletes a specific product.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "isDeleted": {
                  "example": "any"
                },
                "name": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "imgUrl": {
                  "example": "any"
                },
                "unitPrice": {
                  "example": "any"
                },
                "quantity": {
                  "example": "any"
                },
                "categoryId": {
                  "example": "any"
                },
                "brandId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/roles/": {
      "get": {
        "tags": [
          "Roles"
        ],
        "description": "Gets all roles from the database.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Roles"
        ],
        "description": "Creates a new role.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/roles/{roleId}": {
      "put": {
        "tags": [
          "Roles"
        ],
        "description": "Updates a specific role.",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "description": "Deletes a specific role.",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "role": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/search/": {
      "post": {
        "tags": [
          "Utilities"
        ],
        "description": "Search for products by name, category and/or brand. Bearer token is optional.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Search"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/statuses/": {
      "get": {
        "tags": [
          "Statuses"
        ],
        "description": "Gets all statuses from the database.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Statuses"
        ],
        "description": "Creates a new status.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/statuses/{statusId}": {
      "put": {
        "tags": [
          "Statuses"
        ],
        "description": "Updates a specific status.",
        "parameters": [
          {
            "name": "statusId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Statuses"
        ],
        "description": "Deletes a specific status.",
        "parameters": [
          {
            "name": "statusId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "Brand": {
      "type": "object",
      "properties": {
        "brand": {
          "type": "string",
          "example": "Oculus VR"
        }
      },
      "required": [
        "brand"
      ]
    },
    "Cart": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string",
          "example": "1"
        },
        "quantity": {
          "type": "string",
          "example": "1"
        }
      },
      "required": [
        "productId",
        "quantity"
      ]
    },
    "CartDelete": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string",
          "example": "1"
        }
      },
      "required": [
        "productId"
      ]
    },
    "Category": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "example": "VR Headsets"
        }
      },
      "required": [
        "category"
      ]
    },
    "Membership": {
      "type": "object",
      "properties": {
        "membership": {
          "type": "string",
          "example": "Platinum"
        },
        "purchases": {
          "type": "string",
          "example": "50"
        },
        "discount": {
          "type": "string",
          "example": "50"
        }
      },
      "required": [
        "membership",
        "purchases",
        "discount"
      ]
    },
    "Order": {
      "type": "object",
      "properties": {
        "statusId": {
          "type": "string",
          "example": "1"
        }
      },
      "required": [
        "statusId"
      ]
    },
    "Product": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Oculus Rift"
        },
        "description": {
          "type": "string",
          "example": "A VR Headset"
        },
        "imgUrl": {
          "type": "string",
          "example": "https://www.elkjop.no/image/dv_web_D180001002132666/OCULUSRIFT/oculus-rift-vr-headset.jpg"
        },
        "unitPrice": {
          "type": "string",
          "example": "699"
        },
        "quantity": {
          "type": "string",
          "example": "10"
        },
        "categoryId": {
          "type": "string",
          "example": "1"
        },
        "brandId": {
          "type": "string",
          "example": "1"
        }
      },
      "required": [
        "name",
        "description",
        "imgUrl",
        "unitPrice",
        "quantity",
        "categoryId",
        "brandId"
      ]
    },
    "ProductEdit": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Oculus Rift"
        },
        "description": {
          "type": "string",
          "example": "A VR Headset"
        },
        "imgUrl": {
          "type": "string",
          "example": "https://www.elkjop.no/image/dv_web_D180001002132666/OCULUSRIFT/oculus-rift-vr-headset.jpg"
        },
        "unitPrice": {
          "type": "string",
          "example": "699"
        },
        "quantity": {
          "type": "string",
          "example": "10"
        },
        "categoryId": {
          "type": "string",
          "example": "1"
        },
        "brandId": {
          "type": "string",
          "example": "1"
        },
        "isDeleted": {
          "type": "number",
          "example": 0
        }
      },
      "required": [
        "name",
        "description",
        "imgUrl",
        "unitPrice",
        "quantity",
        "categoryId",
        "brandId",
        "isDeleted"
      ]
    },
    "Role": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string",
          "example": "Guest"
        }
      },
      "required": [
        "role"
      ]
    },
    "Search": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "iPhone"
        },
        "category": {
          "type": "string",
          "example": "Phones"
        },
        "brand": {
          "type": "string",
          "example": "Apple"
        }
      },
      "required": [
        "name",
        "category",
        "brand"
      ]
    },
    "Status": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "On Hold"
        }
      },
      "required": [
        "status"
      ]
    },
    "UserLogin": {
      "type": "object",
      "properties": {
        "userName": {
          "type": "string",
          "example": "Admin"
        },
        "password": {
          "type": "string",
          "example": "P@ssword2023"
        }
      },
      "required": [
        "userName",
        "password"
      ]
    },
    "UserRegister": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "example": "User"
        },
        "lastName": {
          "type": "string",
          "example": "NumberOne"
        },
        "userName": {
          "type": "string",
          "example": "User123"
        },
        "email": {
          "type": "string",
          "example": "user123@noroff.no"
        },
        "password": {
          "type": "string",
          "example": "P@ssword123"
        },
        "address": {
          "type": "string",
          "example": "School"
        },
        "telephoneNumber": {
          "type": "string",
          "example": "12345678"
        }
      },
      "required": [
        "firstName",
        "lastName",
        "userName",
        "email",
        "password",
        "address",
        "telephoneNumber"
      ]
    },
    "UserEdit": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "example": "User"
        },
        "lastName": {
          "type": "string",
          "example": "NumberTwo"
        },
        "email": {
          "type": "string",
          "example": "user@noroff.no"
        },
        "address": {
          "type": "string",
          "example": "School 123"
        },
        "telephoneNumber": {
          "type": "string",
          "example": "12345678"
        },
        "roleId": {
          "type": "string",
          "example": "1"
        }
      },
      "required": [
        "firstName",
        "lastName",
        "email",
        "address",
        "telephoneNumber",
        "roleId"
      ]
    }
  }
}